"use strict";(()=>{var f=class{constructor(t){this.values=t,this.index=0}current(){return this.values[this.index]}next(){return this.index=(this.index+1)%this.values.length,this.current()}previous(){return this.index=(this.values.length+this.index-1)%this.values.length,this.current()}random(){return this.index=Math.floor(Math.random()*this.values.length),this.current()}};var r="",o=class{constructor(t){this.data=t}static emptyWithSize(t,e){return new o(new Array(t).fill(r).map(()=>new Array(e).fill(r)))}rows(){return this.data.length}cols(){return this.data[0].length}rotate(){let t=[],e=this.rows(),s=this.cols();for(let i=0;i<s;i++){t[i]=[];for(let n=0;n<e;n++)t[i][n]=this.data[e-n-1][i]}return new o(t)}allRotations(){let t=[this];for(let e=1;e<4;e++)t.push(t[e-1].rotate());return t}draw(t,e,s,i){let n=this.rows(),h=this.cols();for(let a=0;a<n;a++)for(let l=0;l<h;l++){let w=this.data[a][l];w!=r&&(t.fillStyle=w,t.fillRect(e+l*i,s+a*i,i,i))}}isOverlapping(t,e,s){let i=Math.min(s.rows(),t+this.rows()),n=Math.min(s.cols(),e+this.cols());for(let h=t;h<i;h++)for(let a=e;a<n;a++){let l=this.data[h-t][a-e],w=s.data[h][a];if(l!=r&&w!=r)return!0}return!1}copyFrom(t,e,s){let i=Math.min(this.rows(),t+s.rows()),n=Math.min(this.cols(),e+s.cols());for(let h=t;h<i;h++)for(let a=e;a<n;a++){let l=s.data[h-t][a-e];l!=r&&(this.data[h][a]=l)}}isRowFilled(t){let e=this.cols();for(let s=0;s<e;s++)if(this.data[t][s]==r)return!1;return!0}removeRow(t){this.data.splice(t,1),this.data.unshift(new Array(this.cols()).fill(r))}removeFilledRows(){let t=this.rows(),e=0;for(let s=t-1;s>=e;)this.isRowFilled(s)?(this.removeRow(s),e++):s--;return e}};var p=class{constructor(t){this.rotations=new f(t.allRotations()),this.rowOffset=0,this.colOffset=0}static asShapes(t){return t.map(e=>new p(e))}left(t){return this.changeColOffset(this.colOffset-1,t)}right(t){return this.changeColOffset(this.colOffset+1,t)}rotate(t){return this.rotations.next(),this.fitWithin(t),this.isOverlapping(t)?(this.rotations.previous(),!1):!0}down(t){let e=this.rowOffset;return this.rowOffset++,!this.isWithin(t)||this.isOverlapping(t)?(this.rowOffset=e,!1):!0}draw(t,e){this.rotations.current().draw(t,this.colOffset*e,this.rowOffset*e,e)}resetPosition(t){return this.rowOffset=0,this.colOffset=Math.floor((t.cols()-this.rotations.current().cols())/2),!this.isOverlapping(t)}copyTo(t){t.copyFrom(this.rowOffset,this.colOffset,this.rotations.current())}changeColOffset(t,e){let s=this.colOffset;return this.colOffset=t,!this.isWithin(e)||this.isOverlapping(e)?(this.colOffset=s,!1):!0}fitWithin(t){let e=t.rows(),s=t.cols();this.colOffset<0&&(this.colOffset=0);let i=this.rotations.current().cols();this.colOffset+i>s&&(this.colOffset=s-i);let n=this.rotations.current().rows();this.rowOffset+n>e&&(this.rowOffset=e-n)}isWithin(t){if(this.colOffset<0)return!1;let e=this.rotations.current().cols(),s=t.cols();if(this.colOffset+e>s)return!1;let i=this.rotations.current().rows(),n=t.rows();return!(this.rowOffset+i>n)}isOverlapping(t){return this.rotations.current().isOverlapping(this.rowOffset,this.colOffset,t)}};var d="#0000ff",v="#00ffff",x="#00ff00",b="#ff7f00",g="#800080",S="#ff0000",O="#ffff00",E=new o([[v,v,v,v]]),P=new o([[d,r,r],[d,d,d]]),R=new o([[r,r,b],[b,b,b]]),T=new o([[O,O],[O,O]]),D=new o([[r,x,x],[x,x,r]]),L=new o([[g,g,g],[r,g,r]]),A=new o([[S,S,r],[r,S,S]]),y=[E,P,R,T,D,L,A];var u=15,m=10,c=20,M=100,K=1e3;var B=class{constructor(t){this.canvas=t,this.context=t.getContext("2d"),this.board=o.emptyWithSize(u,m),this.lastUpdate=0,this.lastStep=0,this.state=0,this.lines=0,this.score=0,this.shapes=new f(p.asShapes(y)),this.resize(),this.nextShape(),this.listenForKeyEvents(),this.requestUpdate()}clear(){this.board=o.emptyWithSize(u,m),this.lastUpdate=0,this.lastStep=0,this.state=0,this.lines=0,this.score=0,this.nextShape()}left(){this.shapes.current().left(this.board)}right(){this.shapes.current().right(this.board)}down(){this.moveDown()}rotate(){this.shapes.current().rotate(this.board)}togglePaused(){switch(this.state){case 0:this.state=1;break;case 1:this.state=0;break}}resize(){let t=this.canvas.width/(m*c);this.canvas.height=t*(u*c),this.context.scale(t,t)}listenForKeyEvents(){document.addEventListener("keydown",t=>{this.onKeyEvent(t.key.toLowerCase())})}onKeyEvent(t){!this.onControlKey(t)&&this.state==0&&this.onPlayKey(t)}onControlKey(t){switch(t){case"enter":this.togglePaused();break;case"r":this.clear();break;default:return!1}return!0}onPlayKey(t){switch(t){case"arrowleft":this.left();break;case"arrowright":this.right();break;case"arrowup":this.rotate();break;case"arrowdown":this.down();break;case"spacebar":case" ":this.throwDown();break;default:return!1}return!0}requestUpdate(){window.requestAnimationFrame(t=>{this.update(t),this.requestUpdate()})}update(t){this.state==0&&t-this.lastStep>K&&(this.moveDown(),this.lastStep=t),t-this.lastUpdate>M&&(this.context.clearRect(0,0,m*c,u*c),this.board.draw(this.context,0,0,c),this.shapes.current().draw(this.context,c),this.drawStats(),this.lastUpdate=t)}drawStats(){let t=m*c,e=u*c;this.context.fillStyle="#000000",this.context.textAlign="left",this.context.font='10px "Press Start 2P"',this.context.fillText("Lines",2,12),this.context.fillText(this.prependZeros(this.lines,5),2,24);let s=t-2;this.context.textAlign="right",this.context.fillText("Score",s,12),this.context.fillText(this.prependZeros(this.score,5),s,24),this.state==2?(this.context.fillStyle="#ff0000",this.context.textAlign="center",this.context.font='20px "Press Start 2P"',this.context.fillText("Game Over",Math.floor(t/2),Math.floor(e/2))):this.state==1&&(this.context.fillStyle="#00ff00",this.context.textAlign="center",this.context.font='20px "Press Start 2P"',this.context.fillText("Paused",Math.floor(t/2),Math.floor(e/2)))}nextShape(){this.shapes.random(),this.shapes.current().resetPosition(this.board)||(this.state=2)}moveDown(){if(!this.shapes.current().down(this.board)){this.shapes.current().copyTo(this.board);let t=this.board.removeFilledRows();return this.lines+=t,t<4?this.score+=this.lines*10:this.score+=1e3,this.nextShape(),!1}return!0}throwDown(){for(;this.moveDown(););}prependZeros(t,e){let s="000000"+t;return s.substr(s.length-e)}};new B(document.getElementById("board"));})();
//# sourceMappingURL=game.js.map
